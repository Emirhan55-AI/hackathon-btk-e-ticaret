# Aura AI System - Production Ready Configuration
# Ultra-clean AI microservices architecture

version: '3.8'

services:
  # Image Processing AI Service
  image-processing:
    build:
      context: ./aura_ai_system/services/image_processing_service
      dockerfile: Dockerfile
    container_name: aura-image-ai
    ports:
      - "8001:8001"
    networks:
      - aura-network
    volumes:
      - ai_models:/app/models
      - ai_logs:/app/logs
    restart: unless-stopped

  # Natural Language Understanding AI Service  
  nlu-service:
    build:
      context: ./aura_ai_system/services/nlu_service
      dockerfile: Dockerfile
    container_name: aura-nlu-ai
    ports:
      - "8002:8002"
    networks:
      - aura-network
    volumes:
      - ai_models:/app/models
      - ai_logs:/app/logs
    restart: unless-stopped

  # Style Profile AI Service
  style-profile:
    build:
      context: ./aura_ai_system/services/style_profile_service
      dockerfile: Dockerfile
    container_name: aura-style-ai
    ports:
      - "8003:8003"
    networks:
      - aura-network
    volumes:
      - ai_data:/app/data
      - ai_logs:/app/logs
    restart: unless-stopped

  # Combination Engine AI Service
  combination-engine:
    build:
      context: ./aura_ai_system/services/combination_engine_service
      dockerfile: Dockerfile
    container_name: aura-combination-ai
    ports:
      - "8004:8004"
    networks:
      - aura-network
    volumes:
      - ai_data:/app/data
      - ai_logs:/app/logs
    depends_on:
      - image-processing
      - style-profile
    restart: unless-stopped

  # Recommendation Engine AI Service
  recommendation-engine:
    build:
      context: ./aura_ai_system/services/recommendation_engine_service
      dockerfile: Dockerfile
    container_name: aura-recommendation-ai
    ports:
      - "8005:8005"
    networks:
      - aura-network
    volumes:
      - ai_data:/app/data
      - ai_indexes:/app/indexes
      - ai_logs:/app/logs
    depends_on:
      - style-profile
      - image-processing
    restart: unless-stopped

  # AI Orchestrator Service (Main Coordinator)
  orchestrator:
    build:
      context: ./aura_ai_system/services/orchestrator_service
      dockerfile: Dockerfile
    container_name: aura-orchestrator-ai
    ports:
      - "8006:8006"
    networks:
      - aura-network
    volumes:
      - ai_data:/app/data
      - ai_logs:/app/logs
    depends_on:
      - image-processing
      - nlu-service
      - style-profile
      - combination-engine
      - recommendation-engine
      - feedback-loop
    restart: unless-stopped

  # Feedback Loop AI Service
  feedback-loop:
    build:
      context: ./aura_ai_system/services/feedback_loop_service
      dockerfile: Dockerfile
    container_name: aura-feedback-ai
    ports:
      - "8007:8007"
    networks:
      - aura-network
    volumes:
      - ai_data:/app/data
      - ai_logs:/app/logs
    depends_on:
      - style-profile
      - recommendation-engine
    restart: unless-stopped

networks:
  aura-network:
    driver: bridge

volumes:
  ai_models:
  ai_data:
  ai_indexes:
  ai_logs:
