services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aura_postgres
    environment:
      POSTGRES_DB: aura_db
      POSTGRES_USER: aura_user
      POSTGRES_PASSWORD: aura_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aura_user -d aura_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aura_network

  # FastAPI Backend
  backend:
    build: .
    container_name: aura_backend
    environment:
      DATABASE_URL: postgresql+asyncpg://aura_user:aura_password@postgres:5432/aura_db
      SECRET_KEY: dev-secret-key-change-in-production
      AI_SERVICE_URL: http://ai_service:8001
      AI_SERVICE_API_KEY: dev-ai-service-key
      DEBUG: "true"
      LOG_LEVEL: INFO
    volumes:
      - ./logs:/app/logs
      - ./app:/app/app  # For development hot reload
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - aura_network
    restart: unless-stopped

  # AI Service (Mock for development)
  ai_service:
    image: kennethreitz/httpbin
    container_name: aura_ai_service
    ports:
      - "8001:80"
    networks:
      - aura_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/status/200"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (for future caching/session management)
  redis:
    image: redis:7-alpine
    container_name: aura_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aura_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

# Volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# Networks
networks:
  aura_network:
    driver: bridge
